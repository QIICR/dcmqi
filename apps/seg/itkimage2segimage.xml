<?xml version="1.0" encoding="utf-8"?>
<executable>
  <category>Informatics.Converters</category>
  <title>Encode DICOM SEG</title>
  <description>Create DICOM Segmentation Image object from non-DICOM segmentations</description>
  <version></version>
  <documentation-url></documentation-url>
  <license></license>
  <contributor>Andrey Fedorov, BWH</contributor>
<acknowledgements></acknowledgements>

<parameters>
    <string-vector>
      <name>dicomImageFiles</name>
      <label>DICOM images file names</label>
      <channel>input</channel>
      <longflag>dicomImageFiles</longflag>
      <description>List of DICOM images that correspond to the image that was segmented.</description>
    </string-vector>

    <string-vector>
      <name>segImageFiles</name>
      <label>Segmentation file names</label>
      <channel>input</channel>
      <longflag>segImageFiles</longflag>
      <description>File names of the segmentation images in a format readable by ITK (NRRD, NIfTI, MHD, etc.).</description>
    </string-vector>

    <file>
      <name>metaDataFileName</name>
      <label>JSON metadata file</label>
      <channel>input</channel>
      <longflag>metaDataFileName</longflag>
      <description>File names of the text files containing metadata attributes for each of the segments in the input segmentation file. The number of attribute files should match the number of the input segmentation files. The number of lines in each attribute file must match the number of segments in the corresponding segmentation file. Attributes should be separated by semicolon. For each segment label the attribute file should contain the following items separated by semicolon:\nLabelID - integer number of the segment label within the segmentation file (required);\nSegmentedPropertyCategory:code_tuple - code describing segmented property category of the segment. code_tuple consists of the code itself, coding scheme designator and code meaning. For example, T-D0050,SRT,Tissue. Required.\nSegmentedPropertyType:code_tuple - code further describing the segment. Required.\nSegmentedPropertyTypeModifier:code_tuple - code describing the modifier of the segmented property type (e.g., left vs right). Optional.\nSegmentAlgorithmType:type - code designation for the algorithm type, where type can be AUTOMATIC, MANUAL, or SEMIAUTOMATIC. Required.\nSegmentAlgorithmName:name - name of the algorithm, free text. Required if the algorithm usd is not MANUAL.\nRecommendedDisplayRGBValue:rgb - comma-separated recommended color for displaying the segment. Optional.</description>
    </file>

    <file>
      <name>outputSEGFileName</name>
      <label>SEG file name</label>
      <channel>output</channel>
      <longflag>segDICOMFile</longflag>
      <description>File name of the SEG object that will keep the result.</description>
    </file>

    <boolean>
      <name>noSkipEmptySlices</name>
      <label>Skip empty slices</label>
      <channel>input</channel>
      <longflag>noskip</longflag>
      <description>Don't skip empty slices while encoding segmentation image.</description>-->
    </boolean>

    <!--<boolean>-->
      <!--<name>compress</name>-->
      <!--<label>Deflate PixelData</label>-->
      <!--<channel>input</channel>-->
      <!--<longflag>zip</longflag>-->
      <!--<description>Apply compression to PixelData.</description>-->
    <!--</boolean>-->

  </parameters>

</executable>
