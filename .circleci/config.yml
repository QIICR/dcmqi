version: 2

references:

  build_job_filters: &build_job_filters
    filters:
      tags:
        ignore:
          - latest
          - latest-tmp

jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: install python 3.7.5 # from https://github.com/pyenv/pyenv/issues/950#issuecomment-947978563
          command: |
            wget --no-check-certificate https://www.openssl.org/source/openssl-1.1.1g.tar.gz
            tar zxf openssl-1.1.1g.tar.gz
            cd openssl-1.1.1g
             ./config --prefix=/home/circleci/openssl --openssldir=/home/circleci/openssl no-ssl2
            make && make install
            export LDFLAGS="-L /home/circleci/openssl/lib -Wl,-rpath,/home/circleci/openssl/lib"
            export CPPFLAGS="-I/home/circleci/openssl/include"
            export SSH="/home/circleci/openssl"
            cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
            pyenv install 3.7.5
            pyenv global 3.7.5
      - run:
          name: upgrade pip
          command: pip install --upgrade pip
      - run:
          name: install sckit-ci-addons
          command: pip install -U "scikit-ci-addons>=0.22.0"
      - run:
          name: install jsondiff
          command: pip install jsondiff
      - run:
          name: install cmake
          command: |
            sudo apt-get update
            sudo apt-get install rsync
            ci_addons circle/install_cmake 3.7.0
      - run:
          name: build dcmqi
          command: cd docker && make dcmqi
          no_output_timeout: 20m
      - run:
          name: test dcmqi
          command: cd docker && make dcmqi.test
      - run:
          name: output CTest results in JUnit format
          command: |
            mkdir ~/junit
            ci_addons ctest_junit_formatter ~/project/build/dcmqi-build/ > ~/junit/BaseTest.xml
      - store_test_results:
          path: ~/junit
      - run:
          name: publish docker image
          command: |
            [ "$DOCKER_EMAIL" != "" ] && \
            docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker push qiicr/dcmqi:`git describe --tags --exact-match 2> /dev/null || echo "latest"` \
            || echo "skipping docker push"
      - persist_to_workspace:
          root: ./
          paths:
            - build/dcmqi-build

  deploy-master:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: install sckit-ci-addons
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            pip install -U "scikit-ci-addons>=0.22.0"
      - run:
          name: publish binary package on GitHub
          command: |
            . ../venv/bin/activate
            ci_addons publish_github_release qiicr/dcmqi \
            --prerelease-packages "build/dcmqi-build/dcmqi-*-linux-*.tar.gz" \
            --prerelease-packages-clear-pattern "dcmqi-*-linux-*" \
            --prerelease-packages-keep-pattern "*<COMMIT_DATE>-<COMMIT_SHORT_SHA>*" \
            --exit-success-if-missing-token

  deploy-release:
    docker:
      - image: circleci/python:3.7.0-stretch
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: install sckit-ci-addons
          command: |
            python -m venv ../venv
            . ../venv/bin/activate
            pip install -U "scikit-ci-addons>=0.22.0"
      - run:
          name: publish binary package on GitHub
          command: |
            . ../venv/bin/activate
            ci_addons publish_github_release qiicr/dcmqi \
            --release-packages "build/dcmqi-build/dcmqi-*-linux.tar.gz"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          <<: *build_job_filters
      - deploy-master:
          requires:
            - build
          filters:
            branches:
              only: master

      - deploy-release:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
